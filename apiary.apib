FORMAT: 1A
HOST: http://diagnostic.api/

# Diagnostic Api
Diagnotic api designed for share information about openstack's installations


# Group Notes
Notes related resources of the **Notes API**

## Openstack Collection [/openstack]
### List all Openstack installations [GET]
+ Response 200 (application/json)

        [{
          "id": 0, "name": "customer0" 
        }, {
          "id": 1, "name": "customer1"
        }]

### Create an Openstack installation [POST]
+ Request (application/json)

        { "name": "customer3" }

+ Response 201 (application/json)

        { "id": 2, "name": "customer3" }

## Openstack Cluster [/openstack/{id}]
### A single openstack object with all available information        

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Openstack installation to perform action with. Has example value.

### Retrieve an Openstack [GET]
+ Response 200 (application/json)

    + Body

            { "id": 2, "elements": ["hw"] }

### Remove a Openstack [DELETE]
+ Response 204

## Openstack Hardware Collection [/openstack/{id}/hw]
### A single openstack object with detailed information about hardware configuration of the cluster       

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Openstack installation to perform action with. Has example value.

### Retrieve a Openstack [GET]
+ Response 200 (application/json)

    + Body

            { "elements": ["node0", "node1", "node2"] }

### Remove a Openstack [DELETE]
+ Response 204

## Openstack Cluster Node [/openstack/{id}/hw/node0]
### A single node object with all available information about hardware configuration of the node in the OpenStack cluster

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Openstack installation to perform action with. Has example value.

### Retrieve a Openstack [GET]
+ Response 200 (application/json)

    + Body

            { "elements": ["cpu", "memory", "interfaces"] }

### Remove a Openstack [DELETE]
+ Response 204

## OpenStack Services Collection [/openstack/{id}/service]
### List all OpenStack platform services [GET]
+ Response 200 (application/json)

        [{
          "id": 0, "class": "compute", "name": "nova"
         }, {
          "id": 1, "class": "identity", "name": "keystone"
        }]

### Add OpenStack platform service [PUT]
+ Request (application/json)

    + Body
    
            { "class": "object storage", "name": "swift" }

+ Response 200 (application/json)

    + Body
    
            { "id": 2, "class": "object storage", "name": "swift" }